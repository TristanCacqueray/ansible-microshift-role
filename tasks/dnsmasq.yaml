---
- name: Install DNSMasq
  become: true
  ansible.builtin.package:
    name: dnsmasq
    state: present

- name: Get the LoadBalander ip address or Openshift Router ip address
  when: not microshift_frontend_address
  block:
    - name: Create script to get ingress ip address
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          IP=$(oc get svc -n openshift-ingress router-internal-default -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          if [ -z "${IP}" ]; then
              IP=$(oc get svc -n openshift-ingress router-internal-default -o jsonpath='{.spec.clusterIP}');
          fi
          echo "${IP}"
        dest: "~{{ ansible_user }}/recognize_ingress_ip.sh"
        mode: 0755

    - name: Get Ingress IP Address
      ansible.builtin.command: "~{{ ansible_user }}/recognize_ingress_ip.sh"
      register: _lb_ip

    - name: Set the LB or Router IP address as default address for FQDN
      ansible.builtin.set_fact:
        microshift_frontend_address: "{{ _lb_ip.stdout }}"

- name: Change DNSMasq configuration
  become: true
  ansible.builtin.lineinfile:
    path: /etc/dnsmasq.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - regexp: "^#server=/3.168.192.in-addr.arpa/10.1.2.3"
      line: "server={{ cloudprovider_dns | default(public_dns) | random }}"
    - regexp: '^# server=10.1.2.3@eth1'
      line: "server={{ public_dns | random}}"
    - regexp: "^interface=lo"
      line: "#interface=lo"
    - regexp: "^#address=\/double-click.net\/127.0.0.1"
      line: "address=/{{ fqdn }}/127.0.0.1"

# NOTE: Add Openstack k8s domains
- name: Add new addresses to bind to the ingress
  become: true
  ansible.builtin.lineinfile:
    path: /etc/dnsmasq.conf
    line: "address=/{{ item }}/{{ microshift_frontend_address }}"
  loop: "{{ microshift_additional_addresses }}"
  when: microshift_frontend_address

# FROM: https://devopstales.github.io/linux/networkmanagger-dnsmasq/
- name: Add dnsmasq rule for NetworkManager
  become: true
  ansible.builtin.copy:
    content: |
      [main]
      dns=dnsmasq
    dest: /etc/NetworkManager/conf.d/00-microshift-use-dnsmasq.conf

- name: Change resolv.conf
  become: true
  ansible.builtin.copy:
    content: |
      # NOTE: The nameserver ip addresses are set in /etc/dnsmasq.conf
      nameserver 127.0.0.1
    dest: /etc/resolv.conf

- name: Restart DNSMasq service
  become: true
  ansible.builtin.systemd:
    name: dnsmasq
    state: restarted
    enabled: true

- name: Reload NetworkManager
  become: true
  ansible.builtin.systemd:
    name: NetworkManager
    state: reloaded
    enabled: true
