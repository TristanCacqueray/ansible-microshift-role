---
# NOTE: We are adding "forward" parameter in the coredns that is
# resolving DNS queries in dnsmasq that is running to the host.
# With such way, we are able to resolve the service public hostname in the pod,
# so it would be helpful in the CI to simulate deployment in the public
# OpenShift, where some services are not running directly on that cluster.
- name: Create dnsmasq modification dir
  become: true
  ansible.builtin.file:
    path: "{{ coredns_config_dir }}"
    state: directory
    mode: "0755"

- name: Check if DNS backup already exists
  become: true
  ansible.builtin.stat:
    path: "{{ coredns_config_dir }}/dns-configmap-default.yaml"
  register: _back_dns_configmap

- name: Make backup of current DNS configmap
  when: not _back_dns_configmap.stat.exists
  block:
    - name: Create dns configmap backup
      become: true
      ansible.builtin.shell: >
        oc --kubeconfig ~{{ ansible_user }}/.kube/config -n openshift-dns
        get configmap dns-default -o yaml > {{ coredns_config_dir }}/dns-configmap-default.yaml

- name: Add reconfigure-dns.sh script
  become: true
  ansible.builtin.template:
    src: reconfigure-coredns.sh.j2
    dest: /usr/local/bin/reconfigure-coredns.sh
    mode: "0755"

- name: Execute the reconfigure-coredns script
  ansible.builtin.command: /usr/local/bin/reconfigure-coredns.sh
